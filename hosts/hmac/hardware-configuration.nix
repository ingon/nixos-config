# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "nvme" "usbhid" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ "usb_storage" ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = with config.boot.kernelPackages; [ rtl8852au rtl8852bu ];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/ae6cd901-33b8-4e24-8417-4e82121490d0";
    fsType = "ext4";
  };

  boot.initrd.luks.devices."luks-d4197bce-27f2-4264-bc8e-82df6f438ea1" = {
    device = "/dev/disk/by-uuid/d4197bce-27f2-4264-bc8e-82df6f438ea1";
    allowDiscards = true;
    keyFileSize = 4096;
    keyFile = "/dev/sdb";
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/A874-FA7C";
    fsType = "vfat";
    options = [ "fmask=0077" "dmask=0077" ];
  };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp34s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp48s0f3u1.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
